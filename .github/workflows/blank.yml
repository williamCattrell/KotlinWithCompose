# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
     # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - run: echo "The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "This job is running on a ${{ runner.os }} server hosted by GitHub!"
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      - run: echo "The ${{ github.repository }} repository has been cloned."

      - run: echo "Setting up JDK"
      # We need version 17 or higher for our app
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
            java-version: 17
            distribution: 'temurin'
            cache: gradle
      - run: echo "The workflow is now ready to test your code."

      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v1
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - run: echo "Building Debug APK."
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Run build with Gradle Wrapper
        run: ./gradlew build
      - run: echo "Build status report=${{ job.status }}."
        uses: gradle/wrapper-validation-action@v1

      - name: Grant execute permission for gradlew

        run: chmod +x gradlew

      - name: Setup Gradle

        uses: gradle/gradle-build-action@v2

      - name: Run build with Gradle Wrapper

        run: ./gradlew build


  # The second job called "unit_tests"
  # It should run only after the build job succeeds
    unit_tests:
      needs: build
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v3

        - name: Set up JDK 17
          uses: actions/setup-java@v3
          with:
            java-version: 17
            distribution: 'temurin'
            cache: gradle

        - name: Grant execute permission for gradlew
          run: chmod +x gradlew

        # Execute unit tests
        - name: Unit Test
          run: ./gradlew testDebugUnitTest

        - name: Android Test Report
          uses: asadmansr/android-test-report-action@v1.2.0
          if: ${{ always() }} # IMPORTANT: run Android Test Report regardless

    # The third job called "android_tests"
    android_tests:
      needs: unit_tests
      runs-on: macos-latest
      steps:
        - run: echo "Starting Instrumentation Tests"
        - name: Checkout
          uses: actions/checkout@v3
        # Need JDK 17 and gradle 8.1 for the code to build properly in the emulator (8.1.0 leads to error here)
        - name: Set up JDK 17
          uses: actions/setup-java@v3
          with:
            java-version: 17
            distribution: 'temurin'
            cache: gradle

        - name: Gradle cache
          uses: gradle/gradle-build-action@v2
          with:
            gradle-version: 8.1

        - name: Grant execute permission for gradlew
          run: chmod +x gradlew

        - name: Use 8.1 wrapper
          run: ./gradlew wrapper --gradle-version=8.1
        - name: Instrumentation Tests
          uses: reactivecircus/android-emulator-runner@v2
          with:
            api-level: 29
            script: ./gradlew connectedCheck